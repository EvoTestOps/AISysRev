services:
  frontend:
    container_name: frontend_${APP_ENV:-dev}
    environment:
      VITE_APP_ENV: ${APP_ENV:-dev}
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: client
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: package.json
    depends_on:
      - backend

  backend:
    container_name: backend_${APP_ENV:-dev}
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: server
    ports: ["5678:5678"]
    environment:
      PYTHONPATH: /app
      APP_ENV: ${APP_ENV:-dev}
      SECRET_KEY: yoursecretkey
      DB_URL: "postgresql+asyncpg://your_username:your_password@postgres_${APP_ENV:-dev}:5432/your_database_${APP_ENV:-dev}"
      CELERY_BROKER_URL: redis://redis_${APP_ENV:-dev}:6379/0
      REDIS_URL: redis://redis_${APP_ENV:-dev}:6379/0
      MINIO_ENDPOINT: minio${APP_ENV:-dev}:9000
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
      OPENROUTER_MOCK: y
    volumes:
      - ./server:/app
    develop:
      watch:
        - action: sync
          path: ./server
          target: /app
          ignore:
            - node_modules/
            - dist/
            - migrations/
            - server/migrations/
        - action: rebuild
          path: package.json
    depends_on:
      - postgres
      - minio
      - redis
      - celery

  postgres:
    image: postgres:alpine@sha256:fbe21607052bb5c298674f2fd8cf044a63aa3ddf50b81627f894f91f40f50bcb
    container_name: postgres_${APP_ENV:-dev}
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init-scripts:/docker-entrypoint-initdb.d

  adminer:
      container_name: adminer_${APP_ENV:-dev}
      image: adminer:5.3.0@sha256:6bc678e77abcd8c7f34133f4903a4be485ec38b17df3d40a845ee56af0fcb32a
      restart: always
      ports:
        - ${ADMINER_PORT:-8080}:8080

  minio:
    image: minio/minio:latest@sha256:064117214caceaa8d8a90ef7caa58f2b2aeb316b5156afe9ee8da5b4d83e12c8
    container_name: minio${APP_ENV:-dev}
    environment:
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 2

  redis:
    image: redis:7.4.5-alpine@sha256:0c0142c3cd69bc030ea09fecfa1c1c0c7d0e7d6081be6bb4957804f23d2cf57a
    container_name: redis_${APP_ENV:-dev}
    privileged: true
    volumes: 
      - redis_data:/data

  celery:
    container_name: celery_${APP_ENV:-dev}
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: celery
    ports: ["5679:5679"]
    environment:
      PYTHONPATH: /app
      APP_ENV: ${APP_ENV:-dev}
      SECRET_KEY: yoursecretkey
      DB_URL: "postgresql+asyncpg://your_username:your_password@postgres_${APP_ENV:-dev}:5432/your_database_${APP_ENV:-dev}"
      CELERY_BROKER_URL: redis://redis_${APP_ENV:-dev}:6379/0
      REDIS_URL: redis://redis_${APP_ENV:-dev}:6379/0
      MINIO_ENDPOINT: minio${APP_ENV:-dev}:9000
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
    depends_on:
      - redis
    volumes:
      - ./server:/app

  flower:
    container_name: flower_${APP_ENV:-dev}
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: server
    command: celery -A src.worker flower --port=5555
    environment:
      PYTHONPATH: /app
      APP_ENV: ${APP_ENV:-dev}
      SECRET_KEY: yoursecretkey
      DB_URL: "postgresql+asyncpg://your_username:your_password@postgres_${APP_ENV:-dev}:5432/your_database_${APP_ENV:-dev}"
      CELERY_BROKER_URL: redis://redis_${APP_ENV:-dev}:6379/0
      REDIS_URL: redis://redis_${APP_ENV:-dev}:6379/0
      MINIO_ENDPOINT: minio${APP_ENV:-dev}:9000
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
    ports:
      - ${FLOWER_PORT:-5555}:5555
    depends_on:
      - redis
      - celery

volumes:
  postgres_data:
  minio_data:
  redis_data: