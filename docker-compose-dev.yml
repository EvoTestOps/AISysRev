services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: client
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: package.json
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: server
    environment:
      PYTHONPATH: /app
      DB_URL: "postgresql+asyncpg://your_username:your_password@postgres:5432/your_database"
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
    develop:
      watch:
        - action: sync
          path: ./server
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: package.json

  postgres:
    image: postgres:alpine
    container_name: llm_screening_poc_dev_db
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
      image: adminer
      restart: always
      ports:
        - 8081:8080

  minio:
    image: minio/minio:latest
    container_name: llm_screening_poc_minio
    environment:
      MINIO_ROOT_USER: your_username
      MINIO_ROOT_PASSWORD: minio-secret-key
    command: server --console-address ":9001" /csv_data /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_csv_data:/csv_data
      - minio_data:/data
      
  redis:
    image: redis:7
    container_name: llm_screening_poc_redis
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile-dev
      target: server
    command: celery -A app.worker worker --loglevel=info
    environment:
      PYTHONPATH: /app
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - backend
      - redis
    volumes:
      - ./server:/app

volumes:
  postgres_data:
  minio_csv_data:
  minio_data: