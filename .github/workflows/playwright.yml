name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  lint-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
           node-version-file: '.nvmrc'
      - name: Client - Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-
      - name: Client - Install dependencies
        run: npm ci --cache ~/.npm
        working-directory: client
      - name: Client - Run Typecheck
        run: npm run typecheck
        working-directory: client
      - name: Client - Run ESLint
        run: npm run lint
        working-directory: client
  build:
    runs-on: ubuntu-latest
    needs: lint-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Client - Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-
      - name: Client - Install dependencies
        run: npm ci --cache ~/.npm
        working-directory: client
      - name: Client - Build client
        run: npm run build
        working-directory: client
  test:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60
    env:
      APP_ENV: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
           node-version-file: '.nvmrc'
      - name: Client - Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-
      - name: Client - Install dependencies
        run: npm ci --cache ~/.npm
        working-directory: client
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: client
      - name: Run Playwright tests
        run: npx playwright test
        working-directory: client
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
